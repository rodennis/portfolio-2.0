{"ast":null,"code":"var _jsxFileName = \"/Users/rodneytodd/Personal-projects/portfolio-2.0/src/components/Projects/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Projects.css';\nimport video from '../Photos/Untitled.mov';\nimport { useInView } from 'react-intersection-observer';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const [projects] = useState(['project1', \"project2\", \"project3\", \"project4\"]);\n  const {\n    ref,\n    inView\n  } = useInView({\n    /* Optional options */\n    threshold: 0.4\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: inView ? \"project-inview project-zoom\" : \"project-inview\",\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"FiOplZiERaNaHe8lz2PZQiSNlnI=\", false, function () {\n  return [useInView];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/rodneytodd/Personal-projects/portfolio-2.0/src/components/Projects/Projects.jsx"],"names":["React","video","useInView","useState","Projects","projects","ref","inView","threshold","map","project"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAM,CAACC,QAAD,IAAaF,QAAQ,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,CAAD,CAA3B;AAEA,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBL,SAAS,CAAC;AAChC;AACAM,IAAAA,SAAS,EAAE;AAFqB,GAAD,CAAjC;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAGEH,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAClB;AAAK,QAAA,SAAS,EAAEH,MAAM,GAAG,6BAAH,GAAmC,gBAAzD;AAA2E,QAAA,GAAG,EAAGD;AAAjF;AAAA;AAAA;AAAA;AAAA,cADF;AAHF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1BQF,Q;UAIiBF,S;;;KAJjBE,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport './Projects.css'\nimport video from '../Photos/Untitled.mov'\nimport { useInView } from 'react-intersection-observer';\nimport {useState} from 'react'\n\n\nfunction Projects() {\n\n  const [projects] = useState(['project1', \"project2\", \"project3\", \"project4\"])\n\n  const { ref, inView } = useInView({\n    /* Optional options */\n    threshold: 0.4,\n  });\n\n  return (\n    <div>\n      <div className=\"name\">\n        Projects\n      </div>\n      <div className=\"projects\">\n\n      {\n        projects.map(project => (\n          <div className={inView ? \"project-inview project-zoom\" : \"project-inview\"} ref={ ref }>\n\n          </div>\n        ))\n      }\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}